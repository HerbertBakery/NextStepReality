// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "sqlite" with url = "file:./dev.db"
  url      = env("DATABASE_URL")
}

enum ForType {
  SALE
  RENT
}

enum RentalStatus {
  none
  applied
  approved
  declined
  moved_in
  moved_out
}

model Client {
  id               String       @id @default(cuid())
  firstName        String
  lastName         String
  email            String?      @unique
  phone            String?
  birthday         DateTime?
  budgetMin        Int?
  budgetMax        Int?
  lookingFor       String?      @db.Text
  lastRentalStatus RentalStatus @default(none)
  lastRentalNotes  String?      @db.Text
  tags             String?
  archived         Boolean      @default(false)

  // NEW
  agentOnJob       String?
  intakeToken      String?      @unique

  // Back-reference (Property.primaryClient)
  primaryProperties Property[]  @relation("PrimaryClient")

  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}

model Property {
  id               String   @id @default(cuid())
  addressLine1     String
  addressLine2     String?
  city             String
  // province       String?   // intentionally removed in your current setup
  // postalCode     String?   // intentionally removed in your current setup
  forType          ForType
  price            Int?
  beds             Int?
  baths            Int?
  ownerName        String?
  ownerPhone       String?
  ownerEmail       String?
  notes            String?  @db.Text
  archived         Boolean  @default(false)
  imageUrl         String?  @db.Text

  // NEW
  tags             String[] @default([])

  // Optional link to a primary client
  primaryClientId  String?
  primaryClient    Client?  @relation("PrimaryClient", fields: [primaryClientId], references: [id])

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
